{"ast":null,"code":"var _jsxFileName = \"/Users/brianlai/Desktop/wault/client/src/NowPlaying.js\";\nimport React, { Component } from 'react';\nimport './NowPlaying.css';\nimport { Card } from 'react-bootstrap';\nexport default class NowPlaying extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: true,\n      currentSong: {}\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    // Typical usage (don't forget to compare props):\n    console.log('cud');\n\n    if (this.props.currentSong !== prevProps.currentSong) {\n      this.setState({\n        currentSong: this.props.currentSong\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"NowPlaying text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        fontFamily: 'Roboto Slab, serif'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"#NP:\"), React.createElement(\"div\", {\n      style: {\n        fontFamily: 'Roboto Slab, serif'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, Object.keys(this.state.currentSong).length > 0 ? React.createElement(Card, {\n      style: {\n        width: '8rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      variant: \"top\",\n      src: this.state.currentSong.album.images[0].url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(Card.ImgOverlay, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Card.Title, {\n      style: {\n        fontSize: '1rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, this.state.currentSong.name), React.createElement(Card.Text, {\n      style: {\n        fontSize: '0.5rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, this.state.currentSong.artists[0].name))) : 'Play your friends song!'));\n  }\n\n}","map":{"version":3,"sources":["/Users/brianlai/Desktop/wault/client/src/NowPlaying.js"],"names":["React","Component","Card","NowPlaying","constructor","props","state","isLoaded","currentSong","componentDidUpdate","prevProps","console","log","setState","render","fontFamily","Object","keys","length","width","album","images","url","fontSize","name","artists"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,kBAAP;AACA,SAAQC,IAAR,QAAmB,iBAAnB;AAEA,eAAe,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AAC9CG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,IADD;AAETC,MAAAA,WAAW,EAAE;AAFJ,KAAb;AAIH;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC1B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;;AACA,QAAI,KAAKP,KAAL,CAAWG,WAAX,KAA2BE,SAAS,CAACF,WAAzC,EAAsD;AACpD,WAAKK,QAAL,CAAc;AAAEL,QAAAA,WAAW,EAAE,KAAKH,KAAL,CAAWG;AAA1B,OAAd;AACD;AACJ;;AAGDM,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,UAAU,EAAE;AAAb,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGI;AAAK,MAAA,KAAK,EAAE;AAACA,QAAAA,UAAU,EAAE;AAAb,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEKC,MAAM,CAACC,IAAP,CAAY,KAAKX,KAAL,CAAWE,WAAvB,EAAoCU,MAApC,GAA6C,CAA7C,GACG,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE;AAAR,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,GAAN;AAAU,MAAA,OAAO,EAAC,KAAlB;AAAwB,MAAA,GAAG,EAAE,KAAKb,KAAL,CAAWE,WAAX,CAAuBY,KAAvB,CAA6BC,MAA7B,CAAoC,CAApC,EAAuCC,GAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,IAAD,CAAM,UAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAE;AAACC,QAAAA,QAAQ,EAAE;AAAX,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKjB,KAAL,CAAWE,WAAX,CAAuBgB,IAD5B,CADJ,EAII,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAACD,QAAAA,QAAQ,EAAE;AAAX,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKjB,KAAL,CAAWE,WAAX,CAAuBiB,OAAvB,CAA+B,CAA/B,EAAkCD,IADvC,CAJJ,CAFJ,CADH,GAcG,yBAhBR,CAHJ,CADJ;AAyBH;;AA5C6C","sourcesContent":["import React, { Component } from 'react'\nimport './NowPlaying.css'\nimport {Card} from 'react-bootstrap';\n\nexport default class NowPlaying extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoaded: true,\n            currentSong: {}\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        // Typical usage (don't forget to compare props):\n        console.log('cud');\n        if (this.props.currentSong !== prevProps.currentSong) {\n          this.setState({ currentSong: this.props.currentSong });\n        }\n    }\n\n\n    render() {\n        return (\n            <div className='NowPlaying text-center'>\n                \n                <div style={{fontFamily: 'Roboto Slab, serif'}}>#NP:</div>\n                <div style={{fontFamily: 'Roboto Slab, serif'}}>\n\n                    {Object.keys(this.state.currentSong).length > 0 ?\n                        <Card style={{width: '8rem'}}>\n                            <Card.Img variant='top' src={this.state.currentSong.album.images[0].url}/>\n                            <Card.ImgOverlay>\n                                <Card.Title style={{fontSize: '1rem'}}>\n                                    {this.state.currentSong.name}\n                                </Card.Title>\n                                <Card.Text style={{fontSize: '0.5rem'}}>\n                                    {this.state.currentSong.artists[0].name}\n                                </Card.Text>\n\n                            </Card.ImgOverlay>\n                        </Card>\n                        :\n                        'Play your friends song!'\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}