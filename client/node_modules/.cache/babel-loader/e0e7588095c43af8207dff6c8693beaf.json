{"ast":null,"code":"var _jsxFileName = \"/Users/brianlai/Desktop/wault/client/src/User.js\";\nimport React, { Component } from 'react';\nimport { Popover, OverlayTrigger } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser, faPlayCircle, faPauseCircle } from '@fortawesome/free-solid-svg-icons';\nimport './User.css';\nexport default class User extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      likedSongs: this.props.likedSongs,\n      chosenSong: {},\n      isPlaying: false\n    };\n    this.handlePlay = this.handlePlay.bind(this);\n    this.handlePause = this.handlePause.bind(this);\n    this.handleUserClick = this.handleUserClick.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    // Typical usage (don't forget to compare props):\n    if (this.props.likedSongs !== prevProps.likedSongs) {\n      this.setState({\n        likedSongs: this.props.likedSongs\n      });\n    }\n  }\n\n  handlePlay(song) {\n    this.props.playSong(song);\n    this.setState({\n      isPlaying: true\n    });\n  }\n\n  handlePause() {\n    if (!this.state.isPlaying) {\n      return;\n    } else {\n      this.setState({\n        isPlaying: false\n      });\n      this.props.pauseSong();\n    }\n  }\n\n  handleUserClick() {\n    {\n      this.state.isPlaying ? this.handlePause() : this.handlePlay();\n    }\n  }\n\n  chooseSong(song) {}\n\n  render() {\n    // overlay will show user's liked songs\n    const popover = React.createElement(Popover, {\n      className: \"User-popover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Popover.Title, {\n      as: \"h3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"what are u listening to?\"), this.state.likedSongs.map(song => {\n      return React.createElement(Popover.Content, {\n        className: \"User-popover-content\",\n        key: song.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, !this.state.isPlaying ? React.createElement(FontAwesomeIcon, {\n        className: \"mr-2\",\n        onClick: () => this.handlePlay(song),\n        icon: faPlayCircle,\n        size: \"2x\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }) : React.createElement(FontAwesomeIcon, {\n        className: \"mr-2\",\n        onClick: this.handlePause,\n        icon: faPauseCircle,\n        size: \"2x\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        onClick: () => this.chooseSong(song),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, song.name));\n    }));\n    return React.createElement(\"div\", {\n      className: \"User\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, !this.props.userImage ? React.createElement(FontAwesomeIcon, {\n      icon: faUser,\n      size: \"10x\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }) : React.createElement(OverlayTrigger, {\n      trigger: \"click\",\n      placement: \"right\",\n      overlay: popover,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"User-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: this.state.isPlaying ? faPauseCircle : faPlayCircle,\n      size: \"2x\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })), React.createElement(\"img\", {\n      src: this.props.userImage,\n      onClick: this.handleUserClick,\n      className: this.state.isPlaying ? 'spinning' : 'stop-spinning',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/brianlai/Desktop/wault/client/src/User.js"],"names":["React","Component","Popover","OverlayTrigger","FontAwesomeIcon","faUser","faPlayCircle","faPauseCircle","User","constructor","props","state","likedSongs","chosenSong","isPlaying","handlePlay","bind","handlePause","handleUserClick","componentDidUpdate","prevProps","setState","song","playSong","pauseSong","chooseSong","render","popover","map","id","name","userImage"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Popover, OverlayTrigger} from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUser, faPlayCircle, faPauseCircle} from '@fortawesome/free-solid-svg-icons';\nimport './User.css';\n\n\nexport default class User extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            likedSongs: this.props.likedSongs,\n            chosenSong: {},\n            isPlaying: false\n        }\n        this.handlePlay = this.handlePlay.bind(this);\n        this.handlePause = this.handlePause.bind(this);\n        this.handleUserClick = this.handleUserClick.bind(this);\n    }\n\n    componentDidUpdate(prevProps) {\n        // Typical usage (don't forget to compare props):\n        if (this.props.likedSongs !== prevProps.likedSongs) {\n          this.setState({ likedSongs: this.props.likedSongs });\n        }\n    }\n\n    handlePlay(song) {\n        this.props.playSong(song);\n        this.setState({isPlaying: true});\n    }\n\n    handlePause() {\n        if (!this.state.isPlaying) {\n            return;\n        } else {\n            this.setState({isPlaying: false})\n            this.props.pauseSong();\n        }\n    }\n\n    handleUserClick() {\n        {this.state.isPlaying ? this.handlePause() : this.handlePlay()}\n    }\n\n    chooseSong(song) {\n\n    }\n\n    render() {\n\n        // overlay will show user's liked songs\n        const popover = (\n            <Popover className='User-popover'>\n              <Popover.Title as=\"h3\">what are u listening to?</Popover.Title>\n                {this.state.likedSongs.map((song) => {\n                    return  <Popover.Content className='User-popover-content' key={song.id}>\n                                {!this.state.isPlaying ?\n                                    <FontAwesomeIcon className='mr-2' onClick={() => this.handlePlay(song)} icon={faPlayCircle} size='2x'/>\n                                    :\n                                    <FontAwesomeIcon className='mr-2' onClick={this.handlePause} icon={faPauseCircle} size='2x'/>\n                                }\n                                <span onClick={() => this.chooseSong(song)}>{song.name}</span>\n                            </Popover.Content>\n                })}\n            </Popover>\n          );\n\n        return (\n            <div className='User'>\n                {\n                    !this.props.userImage ? \n                        <FontAwesomeIcon icon={faUser} size='10x'/> \n                    : \n                    <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={popover}>\n                        <div className='User-icon'>\n                            <div><FontAwesomeIcon icon={this.state.isPlaying? faPauseCircle : faPlayCircle} size='2x'/></div>\n                            <img src={this.props.userImage} onClick={this.handleUserClick} className={this.state.isPlaying ? 'spinning' : 'stop-spinning'}/>\n                            \n                        </div> \n                    </OverlayTrigger>\n                }\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}