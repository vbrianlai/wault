{"ast":null,"code":"var _jsxFileName = \"/Users/brianlai/Desktop/wault/client/src/User.js\";\nimport React, { Component } from 'react';\nimport { Popover, OverlayTrigger, Collapse } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser, faPlayCircle } from '@fortawesome/free-solid-svg-icons';\nimport './User.css';\nexport default class User extends Component {\n  constructor(props) {\n    super(props); // let isPlaying = this.props.playbackState;\n    // console.log(isPlaying)\n\n    this.state = {\n      likedSongs: this.props.likedSongs\n    };\n    this.handlePlay = this.handlePlay.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    // Typical usage (don't forget to compare props):\n    if (this.props.likedSongs !== prevProps.likedSongs) {\n      this.setState({\n        likedSongs: this.props.likedSongs\n      });\n    }\n  }\n\n  handlePlay(song) {\n    this.props.playSong(song); // this.setState({isPlaying: true});\n  }\n\n  handlePause() {}\n\n  render() {\n    // overlay will show user's liked songs\n    const popover = React.createElement(Popover, {\n      className: \"User-popover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Popover.Title, {\n      as: \"h3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"what are u listening to?\"), this.state.likedSongs.map((song, i) => {\n      return React.createElement(Popover.Content, {\n        className: \"User-popover-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        className: \"mr-2\",\n        onClick: () => this.handlePlay(song),\n        icon: faPlayCircle,\n        size: \"2x\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), React.createElement(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, song.name));\n    }));\n    return React.createElement(\"div\", {\n      className: \"User\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, !this.props.userImage ? React.createElement(FontAwesomeIcon, {\n      icon: faUser,\n      size: \"10x\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }) : React.createElement(OverlayTrigger, {\n      trigger: \"click\",\n      placement: \"right\",\n      overlay: popover,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.props.userImage,\n      onClick: this.props.pauseSong,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/brianlai/Desktop/wault/client/src/User.js"],"names":["React","Component","Popover","OverlayTrigger","Collapse","FontAwesomeIcon","faUser","faPlayCircle","User","constructor","props","state","likedSongs","handlePlay","bind","componentDidUpdate","prevProps","setState","song","playSong","handlePause","render","popover","map","i","name","userImage","pauseSong"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,EAAiBC,cAAjB,EAAiCC,QAAjC,QAAgD,iBAAhD;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,MAAT,EAAiBC,YAAjB,QAAqC,mCAArC;AACA,OAAO,YAAP;AAIA,eAAe,MAAMC,IAAN,SAAmBP,SAAnB,CAA6B;AACxCQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CAEf;AACA;;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE,KAAKF,KAAL,CAAWE;AADd,KAAb;AAGA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACH;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC1B;AACA,QAAI,KAAKN,KAAL,CAAWE,UAAX,KAA0BI,SAAS,CAACJ,UAAxC,EAAoD;AAClD,WAAKK,QAAL,CAAc;AAAEL,QAAAA,UAAU,EAAE,KAAKF,KAAL,CAAWE;AAAzB,OAAd;AACD;AACJ;;AAEDC,EAAAA,UAAU,CAACK,IAAD,EAAO;AACb,SAAKR,KAAL,CAAWS,QAAX,CAAoBD,IAApB,EADa,CAEb;AACH;;AAEDE,EAAAA,WAAW,GAAG,CAEb;;AAEDC,EAAAA,MAAM,GAAG;AAEL;AACA,UAAMC,OAAO,GACT,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAC,cAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD,CAAS,KAAT;AAAe,MAAA,EAAE,EAAC,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,EAEK,KAAKX,KAAL,CAAWC,UAAX,CAAsBW,GAAtB,CAA0B,CAACL,IAAD,EAAOM,CAAP,KAAa;AACpC,aAAQ,oBAAC,OAAD,CAAS,OAAT;AAAiB,QAAA,SAAS,EAAC,sBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,eAAD;AAAiB,QAAA,SAAS,EAAC,MAA3B;AAAkC,QAAA,OAAO,EAAE,MAAM,KAAKX,UAAL,CAAgBK,IAAhB,CAAjD;AAAwE,QAAA,IAAI,EAAEX,YAA9E;AAA4F,QAAA,IAAI,EAAC,IAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIW,IAAI,CAACO,IAAT,CAFJ,CAAR;AAIH,KALA,CAFL,CADJ;AAYA,WACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,CAAC,KAAKf,KAAL,CAAWgB,SAAZ,GACI,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAEpB,MAAvB;AAA+B,MAAA,IAAI,EAAC,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,GAGA,oBAAC,cAAD;AAAgB,MAAA,OAAO,EAAC,OAAxB;AAAgC,MAAA,SAAS,EAAC,OAA1C;AAAkD,MAAA,OAAO,EAAEgB,OAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,GAAG,EAAE,KAAKZ,KAAL,CAAWgB,SAArB;AAAgC,MAAA,OAAO,EAAE,KAAKhB,KAAL,CAAWiB,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CALR,CADJ;AAYH;;AAtDuC","sourcesContent":["import React, { Component } from 'react';\nimport {Popover, OverlayTrigger, Collapse} from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUser, faPlayCircle } from '@fortawesome/free-solid-svg-icons';\nimport './User.css';\n\n\n\nexport default class User extends Component {\n    constructor(props) {\n        super(props);\n        // let isPlaying = this.props.playbackState;\n        // console.log(isPlaying)\n        this.state = {\n            likedSongs: this.props.likedSongs,\n        }\n        this.handlePlay = this.handlePlay.bind(this);\n    }\n\n    componentDidUpdate(prevProps) {\n        // Typical usage (don't forget to compare props):\n        if (this.props.likedSongs !== prevProps.likedSongs) {\n          this.setState({ likedSongs: this.props.likedSongs });\n        }\n    }\n\n    handlePlay(song) {\n        this.props.playSong(song);\n        // this.setState({isPlaying: true});\n    }\n\n    handlePause() {\n\n    }\n\n    render() {\n\n        // overlay will show user's liked songs\n        const popover = (\n            <Popover className='User-popover'>\n              <Popover.Title as=\"h3\">what are u listening to?</Popover.Title>\n                {this.state.likedSongs.map((song, i) => {\n                    return  <Popover.Content className='User-popover-content'>\n                                <FontAwesomeIcon className='mr-2' onClick={() => this.handlePlay(song)} icon={faPlayCircle} size='2x'/>\n                                <a>{song.name}</a>\n                            </Popover.Content>\n                })}\n            </Popover>\n          );\n\n        return (\n            <div className='User'>\n                {\n                    !this.props.userImage ? \n                        <FontAwesomeIcon icon={faUser} size='10x'/> \n                    : \n                    <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={popover}>\n                        <img src={this.props.userImage} onClick={this.props.pauseSong}/>\n                    </OverlayTrigger>\n                }\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}