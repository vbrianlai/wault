{"ast":null,"code":"var _jsxFileName = \"/Users/brianlai/Desktop/wault/client/src/User.js\";\nimport React, { Component } from 'react';\nimport { Popover, OverlayTrigger, Button } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser, faPlayCircle } from '@fortawesome/free-solid-svg-icons';\nimport './User.css';\nexport default class User extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      likedSongs: this.props.likedSongs\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    // Typical usage (don't forget to compare props):\n    if (this.props.likedSongs !== prevProps.likedSongs) {\n      this.setState({\n        likedSongs: this.props.likedSongs\n      });\n    }\n  }\n\n  handleClick(song) {\n    this.props.playSong(song);\n  }\n\n  render() {\n    // overlay will show user's liked songs\n    const popover = React.createElement(Popover, {\n      className: \"User-popover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Popover.Title, {\n      as: \"h3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"what are u listening to?\"), this.state.likedSongs.map((song, i) => {\n      return React.createElement(Popover.Content, {\n        className: \"User-popover-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, i + 1, \". \", song.name), React.createElement(FontAwesomeIcon, {\n        className: \"mx-auto\",\n        onClick: () => this.handleClick(song),\n        icon: faPlayCircle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }));\n    }));\n    return React.createElement(\"div\", {\n      className: \"User\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, !this.props.userImage ? React.createElement(FontAwesomeIcon, {\n      icon: faUser,\n      size: \"10x\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }) : React.createElement(OverlayTrigger, {\n      trigger: \"click\",\n      placement: \"right\",\n      overlay: popover,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.props.userImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/brianlai/Desktop/wault/client/src/User.js"],"names":["React","Component","Popover","OverlayTrigger","Button","FontAwesomeIcon","faUser","faPlayCircle","User","constructor","props","state","likedSongs","handleClick","bind","componentDidUpdate","prevProps","setState","song","playSong","render","popover","map","i","name","userImage"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,EAAiBC,cAAjB,EAAiCC,MAAjC,QAA8C,iBAA9C;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,MAAT,EAAiBC,YAAjB,QAAqC,mCAArC;AACA,OAAO,YAAP;AAEA,eAAe,MAAMC,IAAN,SAAmBP,SAAnB,CAA6B;AACxCQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE,KAAKF,KAAL,CAAWE;AADd,KAAb;AAGA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC1B;AACA,QAAI,KAAKN,KAAL,CAAWE,UAAX,KAA0BI,SAAS,CAACJ,UAAxC,EAAoD;AAClD,WAAKK,QAAL,CAAc;AAAEL,QAAAA,UAAU,EAAE,KAAKF,KAAL,CAAWE;AAAzB,OAAd;AACD;AACJ;;AAEDC,EAAAA,WAAW,CAACK,IAAD,EAAO;AACd,SAAKR,KAAL,CAAWS,QAAX,CAAoBD,IAApB;AACH;;AAEDE,EAAAA,MAAM,GAAG;AAEL;AACA,UAAMC,OAAO,GACT,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAC,cAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD,CAAS,KAAT;AAAe,MAAA,EAAE,EAAC,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,EAEK,KAAKV,KAAL,CAAWC,UAAX,CAAsBU,GAAtB,CAA0B,CAACJ,IAAD,EAAOK,CAAP,KAAa;AACpC,aAAQ,oBAAC,OAAD,CAAS,OAAT;AAAiB,QAAA,SAAS,EAAC,sBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIA,CAAC,GAAC,CAAN,QAAWL,IAAI,CAACM,IAAhB,CADJ,EAEI,oBAAC,eAAD;AAAiB,QAAA,SAAS,EAAC,SAA3B;AAAqC,QAAA,OAAO,EAAE,MAAM,KAAKX,WAAL,CAAiBK,IAAjB,CAApD;AAA4E,QAAA,IAAI,EAAEX,YAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAAR;AAIH,KALA,CAFL,CADJ;AAYA,WACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,CAAC,KAAKG,KAAL,CAAWe,SAAZ,GACI,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAEnB,MAAvB;AAA+B,MAAA,IAAI,EAAC,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,GAGA,oBAAC,cAAD;AAAgB,MAAA,OAAO,EAAC,OAAxB;AAAgC,MAAA,SAAS,EAAC,OAA1C;AAAkD,MAAA,OAAO,EAAEe,OAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,GAAG,EAAE,KAAKX,KAAL,CAAWe,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CALR,CADJ;AAYH;;AA/CuC","sourcesContent":["import React, { Component } from 'react';\nimport {Popover, OverlayTrigger, Button} from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUser, faPlayCircle } from '@fortawesome/free-solid-svg-icons';\nimport './User.css';\n\nexport default class User extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            likedSongs: this.props.likedSongs\n        }\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    componentDidUpdate(prevProps) {\n        // Typical usage (don't forget to compare props):\n        if (this.props.likedSongs !== prevProps.likedSongs) {\n          this.setState({ likedSongs: this.props.likedSongs });\n        }\n    }\n\n    handleClick(song) {\n        this.props.playSong(song);\n    }\n\n    render() {\n\n        // overlay will show user's liked songs\n        const popover = (\n            <Popover className='User-popover'>\n              <Popover.Title as=\"h3\">what are u listening to?</Popover.Title>\n                {this.state.likedSongs.map((song, i) => {\n                    return  <Popover.Content className='User-popover-content'>\n                                <a>{i+1}. {song.name}</a>\n                                <FontAwesomeIcon className='mx-auto' onClick={() => this.handleClick(song)} icon={faPlayCircle}/>\n                            </Popover.Content>\n                })}\n            </Popover>\n          );\n\n        return (\n            <div className='User'>\n                {\n                    !this.props.userImage ? \n                        <FontAwesomeIcon icon={faUser} size='10x'/> \n                    : \n                    <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={popover}>\n                        <img src={this.props.userImage}/>\n                    </OverlayTrigger>\n                }\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}