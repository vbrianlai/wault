{"ast":null,"code":"var _jsxFileName = \"/Users/brianlai/Desktop/wault/client/src/App.js\";\nimport React, { Component } from 'react';\nimport Spotify from 'spotify-web-api-js';\nimport './App.css';\nimport SearchBar from './SearchBar';\nimport NavBar from './NavBar';\nimport User from './User';\nconst spotifyWebApi = new Spotify();\n\nclass App extends Component {\n  constructor(props) {\n    super(props); // Gets access token\n\n    const params = this.getHashParams();\n\n    if (params.access_token) {\n      spotifyWebApi.setAccessToken(params.access_token);\n    }\n\n    this.state = {\n      loggedIn: params.access_token === spotifyWebApi.getAccessToken() ? true : false,\n      username: '',\n      nowPlaying: {\n        name: 'Not checked',\n        image: ''\n      },\n      userImage: '',\n      searchParams: '',\n      access_token: spotifyWebApi.getAccessToken() || null\n    };\n    this.getNowPlaying = this.getNowPlaying.bind(this);\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n        r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n\n    while (e = r.exec(q)) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n\n    return hashParams;\n  }\n\n  componentDidMount() {\n    // console.log(spotifyWebApi.getAccessToken());\n    // fetch('https://api.spotify.com/v1/me', {\n    //   headers: {\n    //     'Authorization': 'Bearer ' + spotifyWebApi.getAccessToken()\n    //   }\n    // }).then((response) => response.json())\n    // .then(data => {console.log(data)});\n    spotifyWebApi.getMe().then(res => {\n      this.setState({\n        username: res.display_name\n      });\n      console.log(res);\n    }); // spotifyWebApi.getMyRecentlyPlayedTracks()\n    //   .then(res => {\n    //       console.log(res);\n    //   });\n  }\n\n  getNowPlaying() {\n    spotifyWebApi.getMyCurrentPlaybackState().then(response => {\n      let song = response ? {\n        name: response.item.name,\n        image: response.item.album.images[0].url\n      } : {\n        name: 'unidentified',\n        image: 'unidentified'\n      };\n      this.setState({\n        nowPlaying: song\n      });\n    });\n  }\n\n  getUser() {\n    spotifyWebApi.getMe().then(response => {\n      this.setState({\n        username: response.display_name\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      loggedIn: this.state.loggedIn,\n      username: this.state.username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(SearchBar, {\n      token: spotifyWebApi.getAccessToken(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Now Playing: \", this.state.nowPlaying.name), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.nowPlaying.image,\n      style: {\n        width: 100\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: this.getNowPlaying,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Check Now Playing\"), React.createElement(User, {\n      userImage: this.state.userImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/brianlai/Desktop/wault/client/src/App.js"],"names":["React","Component","Spotify","SearchBar","NavBar","User","spotifyWebApi","App","constructor","props","params","getHashParams","access_token","setAccessToken","state","loggedIn","getAccessToken","username","nowPlaying","name","image","userImage","searchParams","getNowPlaying","bind","hashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","componentDidMount","getMe","then","res","setState","display_name","console","log","getMyCurrentPlaybackState","response","song","item","album","images","url","getUser","render","width"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Spotify from 'spotify-web-api-js';\nimport './App.css';\nimport SearchBar from './SearchBar';\nimport NavBar from './NavBar';\nimport User from './User';\n\nconst spotifyWebApi = new Spotify();\n\n\nclass App extends Component{\n\n  constructor(props) {\n    super(props);\n\n    // Gets access token\n    const params = this.getHashParams();\n    if (params.access_token) {\n      spotifyWebApi.setAccessToken(params.access_token);\n    }\n\n    this.state = {\n      loggedIn: params.access_token===spotifyWebApi.getAccessToken() ? true : false,\n      username: '',\n      nowPlaying: {\n        name: 'Not checked',\n        image: ''\n      },\n      userImage:'',\n      searchParams: '',\n      access_token: spotifyWebApi.getAccessToken() || null\n    }\n\n    this.getNowPlaying = this.getNowPlaying.bind(this);\n  }\n  \n  \n  getHashParams() {\n    var hashParams = {};\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    while ( e = r.exec(q)) {\n       hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n    return hashParams;\n  }\n\n  componentDidMount() {\n\n    // console.log(spotifyWebApi.getAccessToken());\n\n    // fetch('https://api.spotify.com/v1/me', {\n    //   headers: {\n    //     'Authorization': 'Bearer ' + spotifyWebApi.getAccessToken()\n    //   }\n    // }).then((response) => response.json())\n    // .then(data => {console.log(data)});\n    \n\n    spotifyWebApi.getMe()\n      .then(res => {\n          this.setState({username: res.display_name});\n          console.log(res);\n      });\n    \n    // spotifyWebApi.getMyRecentlyPlayedTracks()\n    //   .then(res => {\n    //       console.log(res);\n    //   });\n  }\n\n  getNowPlaying() {\n    spotifyWebApi.getMyCurrentPlaybackState()\n      .then(response => {\n        let song = response ? {name: response.item.name, image: response.item.album.images[0].url} : {name: 'unidentified', image : 'unidentified'}\n        this.setState({nowPlaying: song});\n      })\n  }\n\n  getUser() {\n    spotifyWebApi.getMe()\n      .then(response => {\n        this.setState({\n          username: response.display_name\n        })\n      });\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <NavBar loggedIn={this.state.loggedIn} username={this.state.username}/>\n        <SearchBar token={spotifyWebApi.getAccessToken()}/>\n      \n        <div>Now Playing: {this.state.nowPlaying.name}</div>\n        <div>\n          <img src={this.state.nowPlaying.image} style={{width: 100}}/>\n        </div>\n        <button onClick={this.getNowPlaying}>\n          Check Now Playing\n        </button>\n        \n        <User userImage={this.state.userImage}/>\n\n\n        \n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}