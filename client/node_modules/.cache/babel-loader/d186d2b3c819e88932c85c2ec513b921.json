{"ast":null,"code":"var _jsxFileName = \"/Users/brianlai/Desktop/wault/client/src/SearchBar.js\";\nimport React, { Component } from 'react';\nimport Spotify from 'spotify-web-api-js';\nimport TrackList from './TrackList';\nimport './SearchBar.css';\nconst spotifyWebApi = new Spotify();\nexport default class SearchBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchParams: '',\n      searchResults: [],\n      showResults: false\n    };\n    this.handleChange = this.handleChange.bind(this); // this.handleSubmit = this.handleSubmit.bind(this);\n  } // handleSubmit(e) {\n  //     e.preventDefault();\n  //     // search tracks on spotify, update searchResults\n  //     const searchParams = this.state.searchParams;\n  //     spotifyWebApi.searchTracks(searchParams)\n  //       .then((data) => {\n  //         let results = [];\n  //         data.tracks.items.forEach(item => {results.push(item)});\n  //         this.setState({searchResults: results});\n  //       }, (err) => {\n  //         console.log(err);\n  //       })\n  // }\n\n\n  handleChange(e) {\n    // console.log(e.target.value);\n    this.setState({\n      searchParams: e.target.value\n    });\n  }\n\n  spotifySearch(str) {\n    spotifyWebApi.searchTracks(str, {\n      limit: 5\n    }).then(data => {\n      let results = [];\n      data.tracks.items.forEach(item => {\n        results.push(item);\n      });\n      this.setState({\n        searchResults: results\n      }); // return results;\n    }, err => {\n      console.log(err);\n    });\n  }\n\n  renderTrackList() {}\n\n  render() {\n    if (this.state.searchParams.length > 0) {\n      this.spotifySearch(this.state.searchParams);\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.handleChange,\n      value: this.state.searchParams,\n      placeholder: \"Search for songs on Spotify\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), this.state.searchParams.length > 0 && React.createElement(TrackList, {\n      results: this.state.searchResults,\n      updateLikes: this.props.updateLikes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/brianlai/Desktop/wault/client/src/SearchBar.js"],"names":["React","Component","Spotify","TrackList","spotifyWebApi","SearchBar","constructor","props","state","searchParams","searchResults","showResults","handleChange","bind","e","setState","target","value","spotifySearch","str","searchTracks","limit","then","data","results","tracks","items","forEach","item","push","err","console","log","renderTrackList","render","length","updateLikes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,iBAAP;AAEA,MAAMC,aAAa,GAAG,IAAIF,OAAJ,EAAtB;AAEA,eAAe,MAAMG,SAAN,SAAwBJ,SAAxB,CAAkC;AAC7CK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAE,EADL;AAETC,MAAAA,aAAa,EAAE,EAFN;AAGTC,MAAAA,WAAW,EAAE;AAHJ,KAAb;AAKA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB,CAPe,CAQf;AACH,GAV4C,CAY7C;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAD,EAAAA,YAAY,CAACE,CAAD,EAAI;AAChB;AACA,SAAKC,QAAL,CAAc;AAACN,MAAAA,YAAY,EAAEK,CAAC,CAACE,MAAF,CAASC;AAAxB,KAAd;AACC;;AAEDC,EAAAA,aAAa,CAACC,GAAD,EAAM;AACff,IAAAA,aAAa,CAACgB,YAAd,CAA2BD,GAA3B,EAAgC;AAACE,MAAAA,KAAK,EAAE;AAAR,KAAhC,EACGC,IADH,CACSC,IAAD,IAAU;AACd,UAAIC,OAAO,GAAG,EAAd;AACAD,MAAAA,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkBC,OAAlB,CAA0BC,IAAI,IAAI;AAACJ,QAAAA,OAAO,CAACK,IAAR,CAAaD,IAAb;AAAmB,OAAtD;AACA,WAAKb,QAAL,CAAc;AAACL,QAAAA,aAAa,EAAEc;AAAhB,OAAd,EAHc,CAId;AACD,KANH,EAMMM,GAAD,IAAS;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KARH;AASH;;AAEDG,EAAAA,eAAe,GAAG,CAEjB;;AAGDC,EAAAA,MAAM,GAAG;AAEL,QAAI,KAAK1B,KAAL,CAAWC,YAAX,CAAwB0B,MAAxB,GAAiC,CAArC,EAAwC;AACpC,WAAKjB,aAAL,CAAmB,KAAKV,KAAL,CAAWC,YAA9B;AACH;;AAED,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAE,KAAKG,YAAlC;AAAgD,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWC,YAAlE;AAAgF,MAAA,WAAW,EAAC,6BAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEK,KAAKD,KAAL,CAAWC,YAAX,CAAwB0B,MAAxB,GAAiC,CAAjC,IAAsC,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAE,KAAK3B,KAAL,CAAWE,aAA/B;AAA8C,MAAA,WAAW,EAAE,KAAKH,KAAL,CAAW6B,WAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAF3C,CADJ;AAQH;;AA/D4C","sourcesContent":["import React, { Component } from 'react'\nimport Spotify from 'spotify-web-api-js';\nimport TrackList from './TrackList';\nimport './SearchBar.css'\n\nconst spotifyWebApi = new Spotify();\n\nexport default class SearchBar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchParams: '',\n            searchResults: [],\n            showResults: false\n        }\n        this.handleChange = this.handleChange.bind(this);\n        // this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    // handleSubmit(e) {\n    //     e.preventDefault();\n    \n    //     // search tracks on spotify, update searchResults\n    //     const searchParams = this.state.searchParams;\n    //     spotifyWebApi.searchTracks(searchParams)\n    //       .then((data) => {\n    //         let results = [];\n    //         data.tracks.items.forEach(item => {results.push(item)});\n    //         this.setState({searchResults: results});\n    //       }, (err) => {\n    //         console.log(err);\n    //       })\n    // }\n\n    handleChange(e) {\n    // console.log(e.target.value);\n    this.setState({searchParams: e.target.value});\n    }\n\n    spotifySearch(str) {\n        spotifyWebApi.searchTracks(str, {limit: 5})\n          .then((data) => {\n            let results = [];\n            data.tracks.items.forEach(item => {results.push(item)});\n            this.setState({searchResults: results});\n            // return results;\n          }, (err) => {\n            console.log(err);\n          })\n    }\n\n    renderTrackList() {\n        \n    }\n\n\n    render() {\n\n        if (this.state.searchParams.length > 0) {\n            this.spotifySearch(this.state.searchParams);\n        }\n\n        return (\n            <div>\n                <input type='text' onChange={this.handleChange} value={this.state.searchParams} placeholder='Search for songs on Spotify'/>\n                {this.state.searchParams.length > 0 && <TrackList results={this.state.searchResults} updateLikes={this.props.updateLikes}/>}\n            </div>\n            \n            \n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}