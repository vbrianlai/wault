{"ast":null,"code":"var _jsxFileName = \"/Users/brianlai/Desktop/wault/wault/src/App.js\";\nimport React, { Component } from 'react';\nimport * as $ from \"jquery\";\nimport Player from \"./Player\";\nimport './App.css';\nexport const authEndpoint = 'https://accounts.spotify.com/authorize'; // Replace with your app's client ID, redirect URI and desired scopes\n\nconst clientId = \"45fca1cfac3c4b8aab92cb8594a2e1ce\";\nconst redirectUri = \"http://localhost:3000\";\nconst scopes = [\"user-read-currently-playing\", \"user-read-playback-state\"]; // Get the hash of the url\n\nconst hash = window.location.hash.substring(1).split(\"&\").reduce(function (initial, item) {\n  if (item) {\n    var parts = item.split(\"=\");\n    initial[parts[0]] = decodeURIComponent(parts[1]);\n  }\n\n  return initial;\n}, {});\nwindow.location.hash = '';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      token: null,\n      item: {\n        album: {\n          images: [{\n            url: \"\"\n          }]\n        },\n        name: \"\",\n        artists: [{\n          name: \"\"\n        }],\n        duration_ms: 0\n      },\n      is_playing: \"Paused\",\n      progress_ms: 0\n    };\n    this.getCurrentlyPlaying = this.getCurrentlyPlaying.bind(this);\n  }\n\n  getCurrentlyPlaying(token) {\n    // Make a call using the token\n    $.ajax({\n      url: \"https://api.spotify.com/v1/me/player\",\n      type: \"GET\",\n      beforeSend: xhr => {\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n      },\n      success: data => {\n        this.setState({\n          item: data.item,\n          is_playing: data.is_playing,\n          progress_ms: data.progress_ms\n        });\n      }\n    });\n  }\n\n  componentDidMount() {\n    // Set token\n    let _token = hash.access_token;\n\n    if (_token) {\n      // Set token\n      this.setState({\n        token: _token\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, !this.state.token && React.createElement(\"a\", {\n      className: \"btn btn--loginApp-link\",\n      href: `${authEndpoint}client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}&response_type=token&show_dialog=true`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Login to Spotify\"), this.state.token && React.createElement(Player, {\n      item: this.state.item,\n      is_playing: this.state.is_playing,\n      progress_ms: this.progress_ms,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/brianlai/Desktop/wault/wault/src/App.js"],"names":["React","Component","$","Player","authEndpoint","clientId","redirectUri","scopes","hash","window","location","substring","split","reduce","initial","item","parts","decodeURIComponent","App","constructor","state","token","album","images","url","name","artists","duration_ms","is_playing","progress_ms","getCurrentlyPlaying","bind","ajax","type","beforeSend","xhr","setRequestHeader","success","data","setState","componentDidMount","_token","access_token","render","join"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport * as $ from \"jquery\";\nimport Player from \"./Player\";\nimport './App.css';\n\nexport const authEndpoint = 'https://accounts.spotify.com/authorize';\n\n// Replace with your app's client ID, redirect URI and desired scopes\nconst clientId = \"45fca1cfac3c4b8aab92cb8594a2e1ce\";\nconst redirectUri = \"http://localhost:3000\";\nconst scopes = [\n  \"user-read-currently-playing\",\n  \"user-read-playback-state\",\n];\n\n// Get the hash of the url\nconst hash = window.location.hash\n  .substring(1)\n  .split(\"&\")\n  .reduce(function(initial, item) {\n    if (item) {\n      var parts = item.split(\"=\");\n      initial[parts[0]] = decodeURIComponent(parts[1]);\n    }\n    return initial;\n  }, {});\n\nwindow.location.hash = '';\n\nclass App extends Component{\n  constructor() {\n    super();\n    this.state = {\n      token: null,\n      item: {\n        album: {\n          images: [{ url: \"\" }]\n        },\n        name: \"\",\n        artists: [{ name: \"\" }],\n        duration_ms:0,\n      },\n      is_playing: \"Paused\",\n      progress_ms: 0\n    };\n    this.getCurrentlyPlaying = this.getCurrentlyPlaying.bind(this);\n  }\n\n  getCurrentlyPlaying(token) {\n    // Make a call using the token\n    $.ajax({\n      url: \"https://api.spotify.com/v1/me/player\",\n      type: \"GET\",\n      beforeSend: (xhr) => {\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n      },\n      success: (data) => {\n        this.setState({\n          item: data.item,\n          is_playing: data.is_playing,\n          progress_ms: data.progress_ms,\n        });\n      }\n    });\n  }\n\n  componentDidMount() {\n    // Set token\n    let _token = hash.access_token;\n    if (_token) {\n      // Set token\n      this.setState({\n        token: _token\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {!this.state.token && (\n          <a\n            className=\"btn btn--loginApp-link\"\n            href={`${authEndpoint}client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}&response_type=token&show_dialog=true`}\n          >\n            Login to Spotify\n          </a>\n        )}\n\n        {this.state.token && (\n          \n          <Player\n            item={this.state.item}\n            is_playing={this.state.is_playing}\n            progress_ms={this.progress_ms}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}