{"ast":null,"code":"var _jsxFileName = \"/Users/brianlai/Desktop/wault/wault/src/App.js\";\nimport React, { Component } from 'react';\nimport Spotify from 'spotify-web-api-js';\nimport * as $ from \"jquery\";\nimport Player from \"./Player\";\nimport './App.css';\nconst spotifyWebApi = new Spotify();\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    const params = this.getHashParams();\n    this.state = {\n      loggedIn: params.access_token ? true : false,\n      username: spotifyWebApi.getMe().then(res => res.display_name),\n      nowPlaying: {\n        name: 'Not Checked',\n        image: ''\n      },\n      searchParams: ''\n    };\n\n    if (params.access_token) {\n      spotifyWebApi.setAccessToken(params.access_token);\n    }\n\n    this.getNowPlaying = this.getNowPlaying.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n        r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n\n    while (e = r.exec(q)) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n\n    return hashParams;\n  }\n\n  getNowPlaying() {\n    spotifyWebApi.getMyCurrentPlaybackState().then(response => {\n      response ? this.setState({\n        nowPlaying: {\n          name: response.item.name,\n          image: response.item.album.images[0].url\n        }\n      }) : console.log(\"nothing is playing\");\n    });\n  }\n\n  getUser() {\n    spotifyWebApi.getMe().then(response => {\n      this.setState({\n        username: response.display_name\n      });\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const searchParams = this.state.searchParams;\n    console.log(searchParams);\n  }\n\n  handleChange(e) {\n    console.log(e.target.value);\n    this.setState({\n      searchParams: e.target.value\n    });\n  }\n\n  render() {\n    // let user = spotifyWebApi.getMe().then( res => res.display_name);\n    console.log(this.state.username);\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, !this.state.loggedIn ? React.createElement(\"a\", {\n      href: \"http://localhost:8888\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Login with Spotify\")) : React.createElement(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"You are logged in as \"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Now Playing: \", this.state.nowPlaying.name), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.nowPlaying.image,\n      style: {\n        width: 100\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: this.getNowPlaying,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Check Now Playing\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.handleChange,\n      value: this.state.searchParams,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/brianlai/Desktop/wault/wault/src/App.js"],"names":["React","Component","Spotify","$","Player","spotifyWebApi","App","constructor","props","params","getHashParams","state","loggedIn","access_token","username","getMe","then","res","display_name","nowPlaying","name","image","searchParams","setAccessToken","getNowPlaying","bind","handleChange","handleSubmit","hashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","getMyCurrentPlaybackState","response","setState","item","album","images","url","console","log","getUser","preventDefault","target","value","render","width"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAO,KAAKC,CAAZ,MAAmB,QAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,WAAP;AAEA,MAAMC,aAAa,GAAG,IAAIH,OAAJ,EAAtB;;AAGA,MAAMI,GAAN,SAAkBL,SAAlB,CAA2B;AAEzBM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,UAAMC,MAAM,GAAG,KAAKC,aAAL,EAAf;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAEH,MAAM,CAACI,YAAP,GAAsB,IAAtB,GAA6B,KAD5B;AAEXC,MAAAA,QAAQ,EAAET,aAAa,CAACU,KAAd,GAAsBC,IAAtB,CAA4BC,GAAG,IAAIA,GAAG,CAACC,YAAvC,CAFC;AAGXC,MAAAA,UAAU,EAAE;AACVC,QAAAA,IAAI,EAAE,aADI;AAEVC,QAAAA,KAAK,EAAE;AAFG,OAHD;AAOXC,MAAAA,YAAY,EAAE;AAPH,KAAb;;AASA,QAAIb,MAAM,CAACI,YAAX,EAAyB;AACvBR,MAAAA,aAAa,CAACkB,cAAd,CAA6Bd,MAAM,CAACI,YAApC;AACD;;AACD,SAAKW,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKE,YAAL,GAAoB,KAAKA,YAAL,CAAkBF,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAGDf,EAAAA,aAAa,GAAG;AACd,QAAIkB,UAAU,GAAG,EAAjB;AACA,QAAIC,CAAJ;AAAA,QAAOC,CAAC,GAAG,sBAAX;AAAA,QACIC,CAAC,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,SAArB,CAA+B,CAA/B,CADR;;AAEA,WAAQN,CAAC,GAAGC,CAAC,CAACM,IAAF,CAAOL,CAAP,CAAZ,EAAuB;AACpBH,MAAAA,UAAU,CAACC,CAAC,CAAC,CAAD,CAAF,CAAV,GAAmBQ,kBAAkB,CAACR,CAAC,CAAC,CAAD,CAAF,CAArC;AACF;;AACD,WAAOD,UAAP;AACD;;AAEDJ,EAAAA,aAAa,GAAG;AACdnB,IAAAA,aAAa,CAACiC,yBAAd,GACGtB,IADH,CACQuB,QAAQ,IAAI;AAChBA,MAAAA,QAAQ,GACN,KAAKC,QAAL,CAAc;AACZrB,QAAAA,UAAU,EAAE;AACVC,UAAAA,IAAI,EAAEmB,QAAQ,CAACE,IAAT,CAAcrB,IADV;AAEVC,UAAAA,KAAK,EAAEkB,QAAQ,CAACE,IAAT,CAAcC,KAAd,CAAoBC,MAApB,CAA2B,CAA3B,EAA8BC;AAF3B;AADA,OAAd,CADM,GAQRC,OAAO,CAACC,GAAR,CAAY,oBAAZ,CARA;AAUD,KAZH;AAaD;;AAEDC,EAAAA,OAAO,GAAG;AACR1C,IAAAA,aAAa,CAACU,KAAd,GACGC,IADH,CACQuB,QAAQ,IAAI;AAChB,WAAKC,QAAL,CAAc;AACZ1B,QAAAA,QAAQ,EAAEyB,QAAQ,CAACrB;AADP,OAAd;AAGD,KALH;AAMD;;AAEDS,EAAAA,YAAY,CAACE,CAAD,EAAI;AACdA,IAAAA,CAAC,CAACmB,cAAF;AAEA,UAAM1B,YAAY,GAAG,KAAKX,KAAL,CAAWW,YAAhC;AACAuB,IAAAA,OAAO,CAACC,GAAR,CAAYxB,YAAZ;AACD;;AAEDI,EAAAA,YAAY,CAACG,CAAD,EAAI;AACdgB,IAAAA,OAAO,CAACC,GAAR,CAAYjB,CAAC,CAACoB,MAAF,CAASC,KAArB;AACA,SAAKV,QAAL,CAAc;AAAClB,MAAAA,YAAY,EAAEO,CAAC,CAACoB,MAAF,CAASC;AAAxB,KAAd;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKnC,KAAL,CAAWG,QAAvB;AACA,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGG,CAAC,KAAKH,KAAL,CAAWC,QAAb,GACA;AAAG,MAAA,IAAI,EAAC,uBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,CADA,GAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BARF,EAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAmB,KAAKD,KAAL,CAAWQ,UAAX,CAAsBC,IAAzC,CAhBF,EAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAE,KAAKT,KAAL,CAAWQ,UAAX,CAAsBE,KAAhC;AAAuC,MAAA,KAAK,EAAE;AAAC+B,QAAAA,KAAK,EAAE;AAAR,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAjBF,EAoBE;AAAQ,MAAA,OAAO,EAAE,KAAK5B,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BApBF,EAwBE;AAAM,MAAA,QAAQ,EAAE,KAAKG,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAE,KAAKD,YAAlC;AAAgD,MAAA,KAAK,EAAI,KAAKf,KAAL,CAAWW,YAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CAxBF,CADF;AAiCD;;AA1GwB;;AA6G3B,eAAehB,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport Spotify from 'spotify-web-api-js';\nimport * as $ from \"jquery\";\nimport Player from \"./Player\";\nimport './App.css';\n\nconst spotifyWebApi = new Spotify();\n\n\nclass App extends Component{\n\n  constructor(props) {\n    super(props);\n    const params = this.getHashParams();\n    this.state = {\n      loggedIn: params.access_token ? true : false,\n      username: spotifyWebApi.getMe().then( res => res.display_name),\n      nowPlaying: {\n        name: 'Not Checked',\n        image: ''\n      },\n      searchParams: ''\n    }\n    if (params.access_token) {\n      spotifyWebApi.setAccessToken(params.access_token);\n    }\n    this.getNowPlaying = this.getNowPlaying.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  \n  \n  getHashParams() {\n    var hashParams = {};\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    while ( e = r.exec(q)) {\n       hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n    return hashParams;\n  }\n\n  getNowPlaying() {\n    spotifyWebApi.getMyCurrentPlaybackState()\n      .then(response => {\n        response ? (\n          this.setState({\n            nowPlaying: {\n              name: response.item.name,\n              image: response.item.album.images[0].url\n            }\n          })\n        ) :\n        console.log(\"nothing is playing\"); \n        \n      })\n  }\n\n  getUser() {\n    spotifyWebApi.getMe()\n      .then(response => {\n        this.setState({\n          username: response.display_name\n        })\n      });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const searchParams = this.state.searchParams;\n    console.log(searchParams);\n  }\n\n  handleChange(e) {\n    console.log(e.target.value);\n    this.setState({searchParams: e.target.value});\n  }\n\n  render() {\n    // let user = spotifyWebApi.getMe().then( res => res.display_name);\n    console.log(this.state.username);\n    return (\n      <div className=\"App\">\n\n      {\n        (!this.state.loggedIn) ? \n        <a href='http://localhost:8888'>\n          <button>Login with Spotify</button>\n        </a>\n        :\n        <a>You are logged in as {}</a>\n\n        \n      }\n          {/* <a href='http://localhost:8888'>\n            <button>Login with Spotify</button>\n          </a> */}\n\n        <div>Now Playing: {this.state.nowPlaying.name}</div>\n        <div>\n          <img src={this.state.nowPlaying.image} style={{width: 100}}/>\n        </div>\n        <button onClick={this.getNowPlaying}>\n          Check Now Playing\n        </button>\n\n        <form onSubmit={this.handleSubmit}>\n          <input type='text' onChange={this.handleChange} value = {this.state.searchParams}/>\n          <button>Submit</button>\n        </form>\n        \n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}