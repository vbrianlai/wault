{"ast":null,"code":"var _jsxFileName = \"/Users/brianlai/Desktop/wault/wault/src/App.js\";\nimport React, { Component } from 'react';\nimport * as $ from \"jquery\";\nimport Player from \"./Player\";\nimport './App.css';\n\nclass App extends Component {\n  getCurrentlyPlaying(token) {\n    // Make a call using the token\n    $.ajax({\n      url: \"https://api.spotify.com/v1/me/player\",\n      type: \"GET\",\n      beforeSend: xhr => {\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n      },\n      success: data => {\n        this.setState({\n          item: data.item,\n          is_playing: data.is_playing,\n          progress_ms: data.progress_ms\n        });\n      }\n    });\n  }\n\n  componentDidMount() {\n    // Set token\n    let _token = hash.access_token;\n\n    if (_token) {\n      // Set token\n      this.setState({\n        token: _token\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, !this.state.token && React.createElement(\"a\", {\n      className: \"btn btn--loginApp-link\",\n      href: `${authEndpoint}client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}&response_type=token&show_dialog=true`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Login to Spotify\"), this.state.token && React.createElement(Player, {\n      item: this.state.item,\n      is_playing: this.state.is_playing,\n      progress_ms: this.progress_ms,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/brianlai/Desktop/wault/wault/src/App.js"],"names":["React","Component","$","Player","App","getCurrentlyPlaying","token","ajax","url","type","beforeSend","xhr","setRequestHeader","success","data","setState","item","is_playing","progress_ms","componentDidMount","_token","hash","access_token","render","state","authEndpoint","clientId","redirectUri","scopes","join"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,KAAKC,CAAZ,MAAmB,QAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,WAAP;;AAGA,MAAMC,GAAN,SAAkBH,SAAlB,CAA2B;AAEzBI,EAAAA,mBAAmB,CAACC,KAAD,EAAQ;AACzB;AACAJ,IAAAA,CAAC,CAACK,IAAF,CAAO;AACLC,MAAAA,GAAG,EAAE,sCADA;AAELC,MAAAA,IAAI,EAAE,KAFD;AAGLC,MAAAA,UAAU,EAAGC,GAAD,IAAS;AACnBA,QAAAA,GAAG,CAACC,gBAAJ,CAAqB,eAArB,EAAsC,YAAYN,KAAlD;AACD,OALI;AAMLO,MAAAA,OAAO,EAAGC,IAAD,IAAU;AACjB,aAAKC,QAAL,CAAc;AACZC,UAAAA,IAAI,EAAEF,IAAI,CAACE,IADC;AAEZC,UAAAA,UAAU,EAAEH,IAAI,CAACG,UAFL;AAGZC,UAAAA,WAAW,EAAEJ,IAAI,CAACI;AAHN,SAAd;AAKD;AAZI,KAAP;AAcD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB;AACA,QAAIC,MAAM,GAAGC,IAAI,CAACC,YAAlB;;AACA,QAAIF,MAAJ,EAAY;AACV;AACA,WAAKL,QAAL,CAAc;AACZT,QAAAA,KAAK,EAAEc;AADK,OAAd;AAGD;AACF;;AAEDG,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAAC,KAAKC,KAAL,CAAWlB,KAAZ,IACC;AACE,MAAA,SAAS,EAAC,wBADZ;AAEE,MAAA,IAAI,EAAG,GAAEmB,YAAa,aAAYC,QAAS,iBAAgBC,WAAY,UAASC,MAAM,CAACC,IAAP,CAAY,KAAZ,CAAmB,uCAFrG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ,EAUG,KAAKL,KAAL,CAAWlB,KAAX,IACC,oBAAC,MAAD;AACE,MAAA,IAAI,EAAE,KAAKkB,KAAL,CAAWR,IADnB;AAEE,MAAA,UAAU,EAAE,KAAKQ,KAAL,CAAWP,UAFzB;AAGE,MAAA,WAAW,EAAE,KAAKC,WAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXJ,CADF;AAoBD;;AApDwB;;AAuD3B,eAAed,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport * as $ from \"jquery\";\nimport Player from \"./Player\";\nimport './App.css';\n\n\nclass App extends Component{\n\n  getCurrentlyPlaying(token) {\n    // Make a call using the token\n    $.ajax({\n      url: \"https://api.spotify.com/v1/me/player\",\n      type: \"GET\",\n      beforeSend: (xhr) => {\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n      },\n      success: (data) => {\n        this.setState({\n          item: data.item,\n          is_playing: data.is_playing,\n          progress_ms: data.progress_ms,\n        });\n      }\n    });\n  }\n\n  componentDidMount() {\n    // Set token\n    let _token = hash.access_token;\n    if (_token) {\n      // Set token\n      this.setState({\n        token: _token\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {!this.state.token && (\n          <a\n            className=\"btn btn--loginApp-link\"\n            href={`${authEndpoint}client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}&response_type=token&show_dialog=true`}\n          >\n            Login to Spotify\n          </a>\n        )}\n\n        {this.state.token && (   \n          <Player\n            item={this.state.item}\n            is_playing={this.state.is_playing}\n            progress_ms={this.progress_ms}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}